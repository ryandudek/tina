[
    {
        "files": {
            "adapter.coffee": {
                "objects": {
                    "0": {
                        "1": {
                            "type": "import",
                            "range": [
                                [
                                    0,
                                    1
                                ],
                                [
                                    0,
                                    12
                                ]
                            ],
                            "bindingType": "variable",
                            "module": "events",
                            "builtin": true,
                            "name": "EventEmitter",
                            "exportsProperty": "EventEmitter"
                        }
                    },
                    "2": {
                        "0": {
                            "type": "class",
                            "name": "Adapter",
                            "superClass": "EventEmitter",
                            "classProperties": [],
                            "prototypeProperties": [
                                [
                                    6,
                                    15
                                ],
                                [
                                    14,
                                    8
                                ],
                                [
                                    23,
                                    9
                                ],
                                [
                                    33,
                                    9
                                ],
                                [
                                    41,
                                    9
                                ],
                                [
                                    49,
                                    8
                                ],
                                [
                                    54,
                                    7
                                ],
                                [
                                    59,
                                    9
                                ],
                                [
                                    64,
                                    11
                                ],
                                [
                                    70,
                                    9
                                ],
                                [
                                    77,
                                    13
                                ],
                                [
                                    84,
                                    15
                                ],
                                [
                                    93,
                                    24
                                ],
                                [
                                    102,
                                    21
                                ],
                                [
                                    112,
                                    8
                                ]
                            ],
                            "range": [
                                [
                                    2,
                                    0
                                ],
                                [
                                    115,
                                    0
                                ]
                            ]
                        }
                    },
                    "6": {
                        "15": {
                            "name": "constructor",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                null
                            ],
                            "range": [
                                [
                                    6,
                                    15
                                ],
                                [
                                    6,
                                    25
                                ]
                            ],
                            "doc": " Private: An adapter is a specific interface to a chat source for robots.\n\nrobot - A Robot instance. "
                        }
                    },
                    "14": {
                        "8": {
                            "name": "send",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "envelope",
                                "strings"
                            ],
                            "range": [
                                [
                                    14,
                                    8
                                ],
                                [
                                    14,
                                    32
                                ]
                            ],
                            "doc": " Public: Raw method for sending data back to the chat source. Extend this.\n\nenvelope - A Object with message, room and user details.\nstrings  - One or more Strings for each message to send.\n\nReturns nothing. "
                        }
                    },
                    "23": {
                        "9": {
                            "name": "emote",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "envelope",
                                "strings"
                            ],
                            "range": [
                                [
                                    23,
                                    9
                                ],
                                [
                                    33,
                                    1
                                ]
                            ],
                            "doc": " Public: Raw method for sending emote data back to the chat source.\nDefaults as an alias for send\n\nenvelope - A Object with message, room and user details.\nstrings  - One or more Strings for each message to send.\n\nReturns nothing. "
                        }
                    },
                    "33": {
                        "9": {
                            "name": "reply",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "envelope",
                                "strings"
                            ],
                            "range": [
                                [
                                    33,
                                    9
                                ],
                                [
                                    33,
                                    33
                                ]
                            ],
                            "doc": " Public: Raw method for building a reply and sending it back to the chat\nsource. Extend this.\n\nenvelope - A Object with message, room and user details.\nstrings  - One or more Strings for each reply to send.\n\nReturns nothing. "
                        }
                    },
                    "41": {
                        "9": {
                            "name": "topic",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "envelope",
                                "strings"
                            ],
                            "range": [
                                [
                                    41,
                                    9
                                ],
                                [
                                    41,
                                    33
                                ]
                            ],
                            "doc": " Public: Raw method for setting a topic on the chat source. Extend this.\n\nenvelope - A Object with message, room and user details.\nstrings  - One more more Strings to set as the topic.\n\nReturns nothing. "
                        }
                    },
                    "49": {
                        "8": {
                            "name": "play",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "envelope",
                                "strings"
                            ],
                            "range": [
                                [
                                    49,
                                    8
                                ],
                                [
                                    49,
                                    32
                                ]
                            ],
                            "doc": " Public: Raw method for playing a sound in the chat source. Extend this.\n\nenvelope - A Object with message, room and user details.\nstrings  - One or more strings for each play message to send.\n\nReturns nothing "
                        }
                    },
                    "54": {
                        "7": {
                            "name": "run",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [],
                            "range": [
                                [
                                    54,
                                    7
                                ],
                                [
                                    54,
                                    8
                                ]
                            ],
                            "doc": " Public: Raw method for invoking the bot to run. Extend this.\n\nReturns nothing. "
                        }
                    },
                    "59": {
                        "9": {
                            "name": "close",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [],
                            "range": [
                                [
                                    59,
                                    9
                                ],
                                [
                                    59,
                                    10
                                ]
                            ],
                            "doc": " Public: Raw method for shutting the bot down. Extend this.\n\nReturns nothing. "
                        }
                    },
                    "64": {
                        "11": {
                            "name": "receive",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "message"
                            ],
                            "range": [
                                [
                                    64,
                                    11
                                ],
                                [
                                    70,
                                    1
                                ]
                            ],
                            "doc": " Public: Dispatch a received message to the robot.\n\nReturns nothing. "
                        }
                    },
                    "70": {
                        "9": {
                            "name": "users",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [],
                            "range": [
                                [
                                    70,
                                    9
                                ],
                                [
                                    77,
                                    1
                                ]
                            ],
                            "doc": " Public: Get an Array of User objects stored in the brain.\n\nReturns an Array of User objects. "
                        }
                    },
                    "77": {
                        "13": {
                            "name": "userForId",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "id",
                                "options"
                            ],
                            "range": [
                                [
                                    77,
                                    13
                                ],
                                [
                                    84,
                                    1
                                ]
                            ],
                            "doc": " Public: Get a User object given a unique identifier.\n\nReturns a User instance of the specified user. "
                        }
                    },
                    "84": {
                        "15": {
                            "name": "userForName",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "name"
                            ],
                            "range": [
                                [
                                    84,
                                    15
                                ],
                                [
                                    93,
                                    1
                                ]
                            ],
                            "doc": " Public: Get a User object given a name.\n\nReturns a User instance for the user with the specified name. "
                        }
                    },
                    "93": {
                        "24": {
                            "name": "usersForRawFuzzyName",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "fuzzyName"
                            ],
                            "range": [
                                [
                                    93,
                                    24
                                ],
                                [
                                    102,
                                    1
                                ]
                            ],
                            "doc": " Public: Get all users whose names match fuzzyName. Currently, match\nmeans 'starts with', but this could be extended to match initials,\nnicknames, etc.\n\nReturns an Array of User instances matching the fuzzy name. "
                        }
                    },
                    "102": {
                        "21": {
                            "name": "usersForFuzzyName",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "fuzzyName"
                            ],
                            "range": [
                                [
                                    102,
                                    21
                                ],
                                [
                                    112,
                                    1
                                ]
                            ],
                            "doc": " Public: If fuzzyName is an exact match for a user, returns an array with\njust that user. Otherwise, returns an array of all users for which\nfuzzyName is a raw fuzzy match (see usersForRawFuzzyName).\n\nReturns an Array of User instances matching the fuzzy name. "
                        }
                    },
                    "112": {
                        "8": {
                            "name": "http",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "url"
                            ],
                            "range": [
                                [
                                    112,
                                    8
                                ],
                                [
                                    115,
                                    0
                                ]
                            ],
                            "doc": " Public: Creates a scoped http client with chainable methods for\nmodifying the request. This doesn't actually make a request though.\nOnce your request is assembled, you can call `get()`/`post()`/etc to\nsend the request.\n\nReturns a ScopedClient instance. "
                        }
                    }
                },
                "exports": 116
            },
            "brain.coffee": {
                "objects": {
                    "0": {
                        "1": {
                            "type": "import",
                            "range": [
                                [
                                    0,
                                    1
                                ],
                                [
                                    0,
                                    12
                                ]
                            ],
                            "bindingType": "variable",
                            "module": "events",
                            "builtin": true,
                            "name": "EventEmitter",
                            "exportsProperty": "EventEmitter"
                        }
                    },
                    "2": {
                        "7": {
                            "name": "User",
                            "type": "import",
                            "range": [
                                [
                                    2,
                                    7
                                ],
                                [
                                    2,
                                    22
                                ]
                            ],
                            "bindingType": "variable",
                            "path": "./user"
                        }
                    },
                    "4": {
                        "0": {
                            "type": "class",
                            "name": "Brain",
                            "superClass": "EventEmitter",
                            "classProperties": [],
                            "prototypeProperties": [
                                [
                                    8,
                                    15
                                ],
                                [
                                    22,
                                    7
                                ],
                                [
                                    37,
                                    7
                                ],
                                [
                                    44,
                                    10
                                ],
                                [
                                    52,
                                    8
                                ],
                                [
                                    58,
                                    9
                                ],
                                [
                                    68,
                                    15
                                ],
                                [
                                    76,
                                    21
                                ],
                                [
                                    87,
                                    13
                                ],
                                [
                                    96,
                                    9
                                ],
                                [
                                    102,
                                    13
                                ],
                                [
                                    117,
                                    15
                                ],
                                [
                                    131,
                                    24
                                ],
                                [
                                    142,
                                    21
                                ]
                            ],
                            "range": [
                                [
                                    4,
                                    0
                                ],
                                [
                                    152,
                                    51
                                ]
                            ]
                        }
                    },
                    "8": {
                        "15": {
                            "name": "constructor",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "robot"
                            ],
                            "range": [
                                [
                                    8,
                                    15
                                ],
                                [
                                    22,
                                    1
                                ]
                            ],
                            "doc": " Private: Represents somewhat persistent storage for the robot. Extend this.\n\nReturns a new Brain with no external storage. "
                        }
                    },
                    "22": {
                        "7": {
                            "name": "set",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "key",
                                "value"
                            ],
                            "range": [
                                [
                                    22,
                                    7
                                ],
                                [
                                    37,
                                    1
                                ]
                            ],
                            "doc": " Public: Store key-value pair under the private namespace and extend\nexisting @data before emitting the 'loaded' event.\n\nReturns the instance for chaining. "
                        }
                    },
                    "37": {
                        "7": {
                            "name": "get",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "key"
                            ],
                            "range": [
                                [
                                    37,
                                    7
                                ],
                                [
                                    44,
                                    1
                                ]
                            ],
                            "doc": " Public: Get value by key from the private namespace in @data\nor return null if not found.\n\nReturns the value. "
                        }
                    },
                    "44": {
                        "10": {
                            "name": "remove",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "key"
                            ],
                            "range": [
                                [
                                    44,
                                    10
                                ],
                                [
                                    52,
                                    1
                                ]
                            ],
                            "doc": " Public: Remove value by key from the private namespace in @data\nif it exists\n\nReturns the instance for chaining. "
                        }
                    },
                    "52": {
                        "8": {
                            "name": "save",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [],
                            "range": [
                                [
                                    52,
                                    8
                                ],
                                [
                                    58,
                                    1
                                ]
                            ],
                            "doc": " Public: Emits the 'save' event so that 'brain' scripts can handle\npersisting.\n\nReturns nothing. "
                        }
                    },
                    "58": {
                        "9": {
                            "name": "close",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [],
                            "range": [
                                [
                                    58,
                                    9
                                ],
                                [
                                    68,
                                    1
                                ]
                            ],
                            "doc": " Public: Emits the 'close' event so that 'brain' scripts can handle closing.\n\nReturns nothing. "
                        }
                    },
                    "68": {
                        "15": {
                            "name": "setAutoSave",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "enabled"
                            ],
                            "range": [
                                [
                                    68,
                                    15
                                ],
                                [
                                    76,
                                    1
                                ]
                            ],
                            "doc": " Public: Enable or disable the automatic saving\n\nenabled - A boolean whether to autosave or not\n\nReturns nothing "
                        }
                    },
                    "76": {
                        "21": {
                            "name": "resetSaveInterval",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "seconds"
                            ],
                            "range": [
                                [
                                    76,
                                    21
                                ],
                                [
                                    87,
                                    1
                                ]
                            ],
                            "doc": " Public: Reset the interval between save function calls.\n\nseconds - An Integer of seconds between saves.\n\nReturns nothing. "
                        }
                    },
                    "87": {
                        "13": {
                            "name": "mergeData",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "data"
                            ],
                            "range": [
                                [
                                    87,
                                    13
                                ],
                                [
                                    96,
                                    1
                                ]
                            ],
                            "doc": " Public: Merge keys loaded from a DB against the in memory representation.\n\nReturns nothing.\n\nCaveats: Deeply nested structures don't merge well. "
                        }
                    },
                    "96": {
                        "9": {
                            "name": "users",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [],
                            "range": [
                                [
                                    96,
                                    9
                                ],
                                [
                                    102,
                                    1
                                ]
                            ],
                            "doc": " Public: Get an Array of User objects stored in the brain.\n\nReturns an Array of User objects. "
                        }
                    },
                    "102": {
                        "13": {
                            "name": "userForId",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "id",
                                "options"
                            ],
                            "range": [
                                [
                                    102,
                                    13
                                ],
                                [
                                    117,
                                    1
                                ]
                            ],
                            "doc": " Public: Get a User object given a unique identifier.\n\nReturns a User instance of the specified user. "
                        }
                    },
                    "117": {
                        "15": {
                            "name": "userForName",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "name"
                            ],
                            "range": [
                                [
                                    117,
                                    15
                                ],
                                [
                                    131,
                                    1
                                ]
                            ],
                            "doc": " Public: Get a User object given a name.\n\nReturns a User instance for the user with the specified name. "
                        }
                    },
                    "131": {
                        "24": {
                            "name": "usersForRawFuzzyName",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "fuzzyName"
                            ],
                            "range": [
                                [
                                    131,
                                    24
                                ],
                                [
                                    142,
                                    1
                                ]
                            ],
                            "doc": " Public: Get all users whose names match fuzzyName. Currently, match\nmeans 'starts with', but this could be extended to match initials,\nnicknames, etc.\n\nReturns an Array of User instances matching the fuzzy name. "
                        }
                    },
                    "142": {
                        "21": {
                            "name": "usersForFuzzyName",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "fuzzyName"
                            ],
                            "range": [
                                [
                                    142,
                                    21
                                ],
                                [
                                    152,
                                    51
                                ]
                            ],
                            "doc": " Public: If fuzzyName is an exact match for a user, returns an array with\njust that user. Otherwise, returns an array of all users for which\nfuzzyName is a raw fuzzy match (see usersForRawFuzzyName).\n\nReturns an Array of User instances matching the fuzzy name. "
                        }
                    },
                    "153": {
                        "9": {
                            "name": "extend",
                            "bindingType": "variable",
                            "type": "function",
                            "paramNames": [
                                "obj",
                                "sources"
                            ],
                            "range": [
                                [
                                    153,
                                    9
                                ],
                                [
                                    157,
                                    0
                                ]
                            ],
                            "doc": " Private: Extend obj with objects passed as additional args.\n\nReturns the original object with updated changes. "
                        }
                    }
                },
                "exports": 158
            },
            "listener.coffee": {
                "objects": {
                    "0": {
                        "1": {
                            "type": "import",
                            "range": [
                                [
                                    0,
                                    1
                                ],
                                [
                                    0,
                                    7
                                ]
                            ],
                            "bindingType": "variable",
                            "module": "util",
                            "builtin": true,
                            "name": "inspect",
                            "exportsProperty": "inspect"
                        }
                    },
                    "2": {
                        "1": {
                            "type": "import",
                            "range": [
                                [
                                    2,
                                    1
                                ],
                                [
                                    2,
                                    11
                                ]
                            ],
                            "bindingType": "variable",
                            "path": "./message",
                            "name": "TextMessage",
                            "exportsProperty": "TextMessage"
                        }
                    },
                    "4": {
                        "0": {
                            "type": "class",
                            "name": "Listener",
                            "classProperties": [],
                            "prototypeProperties": [
                                [
                                    12,
                                    15
                                ],
                                [
                                    21,
                                    8
                                ]
                            ],
                            "range": [
                                [
                                    4,
                                    0
                                ],
                                [
                                    30,
                                    0
                                ]
                            ]
                        }
                    },
                    "12": {
                        "15": {
                            "name": "constructor",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                null,
                                null,
                                null
                            ],
                            "range": [
                                [
                                    12,
                                    15
                                ],
                                [
                                    12,
                                    46
                                ]
                            ],
                            "doc": " Private: Listeners receive every message from the chat source and decide if they\nwant to act on it.\n\nrobot    - A Robot instance.\nmatcher  - A Function that determines if this listener should trigger the\n           callback.\ncallback - A Function that is triggered if the incoming message matches. "
                        }
                    },
                    "21": {
                        "8": {
                            "name": "call",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "message"
                            ],
                            "range": [
                                [
                                    21,
                                    8
                                ],
                                [
                                    30,
                                    0
                                ]
                            ],
                            "doc": " Public: Determines if the listener likes the content of the message. If\nso, a Response built from the given Message is passed to the Listener\ncallback.\n\nmessage - A Message instance.\n\nReturns a boolean of whether the matcher matched. "
                        }
                    },
                    "31": {
                        "0": {
                            "type": "class",
                            "name": "TextListener",
                            "superClass": "Listener",
                            "classProperties": [],
                            "prototypeProperties": [
                                [
                                    39,
                                    15
                                ]
                            ],
                            "range": [
                                [
                                    31,
                                    0
                                ],
                                [
                                    43,
                                    0
                                ]
                            ]
                        }
                    },
                    "39": {
                        "15": {
                            "name": "constructor",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                null,
                                null,
                                null
                            ],
                            "range": [
                                [
                                    39,
                                    15
                                ],
                                [
                                    43,
                                    0
                                ]
                            ],
                            "doc": " Private: TextListeners receive every message from the chat source and decide if they\nwant to act on it.\n\nrobot    - A Robot instance.\nregex    - A Regex that determines if this listener should trigger the\n           callback.\ncallback - A Function that is triggered if the incoming message matches. "
                        }
                    }
                },
                "exports": 44
            },
            "message.coffee": {
                "objects": {
                    "0": {
                        "0": {
                            "type": "class",
                            "name": "Message",
                            "classProperties": [],
                            "prototypeProperties": [
                                [
                                    4,
                                    15
                                ],
                                [
                                    10,
                                    10
                                ]
                            ],
                            "range": [
                                [
                                    0,
                                    0
                                ],
                                [
                                    12,
                                    0
                                ]
                            ]
                        }
                    },
                    "4": {
                        "15": {
                            "name": "constructor",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                null,
                                null
                            ],
                            "range": [
                                [
                                    4,
                                    15
                                ],
                                [
                                    10,
                                    1
                                ]
                            ],
                            "doc": " Private: Represents an incoming message from the chat.\n\nuser - A User instance that sent the message. "
                        }
                    },
                    "10": {
                        "10": {
                            "name": "finish",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [],
                            "range": [
                                [
                                    10,
                                    10
                                ],
                                [
                                    12,
                                    0
                                ]
                            ],
                            "doc": " Private: Indicates that no other Listener should be called on this object\n\nReturns nothing. "
                        }
                    },
                    "13": {
                        "0": {
                            "type": "class",
                            "name": "TextMessage",
                            "superClass": "Message",
                            "classProperties": [],
                            "prototypeProperties": [
                                [
                                    19,
                                    15
                                ],
                                [
                                    27,
                                    9
                                ],
                                [
                                    33,
                                    12
                                ]
                            ],
                            "range": [
                                [
                                    13,
                                    0
                                ],
                                [
                                    40,
                                    36
                                ]
                            ]
                        }
                    },
                    "19": {
                        "15": {
                            "name": "constructor",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                null,
                                null,
                                null
                            ],
                            "range": [
                                [
                                    19,
                                    15
                                ],
                                [
                                    27,
                                    1
                                ]
                            ],
                            "doc": " Private: Represents an incoming message from the chat.\n\nuser - A User instance that sent the message.\ntext - A String message.\nid   - A String of the message ID. "
                        }
                    },
                    "27": {
                        "9": {
                            "name": "match",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "regex"
                            ],
                            "range": [
                                [
                                    27,
                                    9
                                ],
                                [
                                    33,
                                    1
                                ]
                            ],
                            "doc": " Private: Determines if the message matches the given regex.\n\nregex - A Regex to check.\n\nReturns a Match object or null. "
                        }
                    },
                    "33": {
                        "12": {
                            "name": "toString",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [],
                            "range": [
                                [
                                    33,
                                    12
                                ],
                                [
                                    40,
                                    36
                                ]
                            ],
                            "doc": " Private: String representation of a TextMessage\n\nReturns the message text "
                        }
                    },
                    "41": {
                        "0": {
                            "type": "class",
                            "name": "EnterMessage",
                            "superClass": "Message",
                            "classProperties": [],
                            "prototypeProperties": [],
                            "doc": " Private: Represents an incoming user entrance notification.\n\nuser - A User instance for the user who entered.\ntext - Always null.\nid   - A String of the message ID. ",
                            "range": [
                                [
                                    41,
                                    0
                                ],
                                [
                                    41,
                                    33
                                ]
                            ]
                        }
                    },
                    "48": {
                        "0": {
                            "type": "class",
                            "name": "LeaveMessage",
                            "superClass": "Message",
                            "classProperties": [],
                            "prototypeProperties": [],
                            "doc": " Private: Represents an incoming user exit notification.\n\nuser - A User instance for the user who left.\ntext - Always null.\nid   - A String of the message ID. ",
                            "range": [
                                [
                                    48,
                                    0
                                ],
                                [
                                    48,
                                    33
                                ]
                            ]
                        }
                    },
                    "55": {
                        "0": {
                            "type": "class",
                            "name": "TopicMessage",
                            "superClass": "TextMessage",
                            "classProperties": [],
                            "prototypeProperties": [],
                            "doc": " Private: Represents an incoming topic change notification.\n\nuser - A User instance for the user who changed the topic.\ntext - A String of the new topic\nid   - A String of the message ID. ",
                            "range": [
                                [
                                    55,
                                    0
                                ],
                                [
                                    55,
                                    37
                                ]
                            ]
                        }
                    },
                    "57": {
                        "0": {
                            "type": "class",
                            "name": "CatchAllMessage",
                            "superClass": "Message",
                            "classProperties": [],
                            "prototypeProperties": [
                                [
                                    61,
                                    15
                                ]
                            ],
                            "range": [
                                [
                                    57,
                                    0
                                ],
                                [
                                    63,
                                    0
                                ]
                            ]
                        }
                    },
                    "61": {
                        "15": {
                            "name": "constructor",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                null
                            ],
                            "range": [
                                [
                                    61,
                                    15
                                ],
                                [
                                    63,
                                    0
                                ]
                            ],
                            "doc": " Private: Represents a message that no matchers matched.\n\nmessage - The original message. "
                        }
                    }
                },
                "exports": 64
            },
            "response.coffee": {
                "objects": {
                    "0": {
                        "0": {
                            "type": "class",
                            "name": "Response",
                            "classProperties": [],
                            "prototypeProperties": [
                                [
                                    8,
                                    15
                                ],
                                [
                                    20,
                                    8
                                ],
                                [
                                    29,
                                    9
                                ],
                                [
                                    38,
                                    9
                                ],
                                [
                                    47,
                                    9
                                ],
                                [
                                    56,
                                    8
                                ],
                                [
                                    65,
                                    10
                                ],
                                [
                                    73,
                                    10
                                ],
                                [
                                    79,
                                    10
                                ],
                                [
                                    88,
                                    8
                                ]
                            ],
                            "range": [
                                [
                                    0,
                                    0
                                ],
                                [
                                    90,
                                    0
                                ]
                            ]
                        }
                    },
                    "8": {
                        "15": {
                            "name": "constructor",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                null,
                                null,
                                null
                            ],
                            "range": [
                                [
                                    8,
                                    15
                                ],
                                [
                                    20,
                                    1
                                ]
                            ],
                            "doc": " Public: Responses are sent to matching listeners. Messages know about the\ncontent and user that made the original message, and how to reply back to\nthem.\n\nrobot   - A Robot instance.\nmessage - A Message instance.\nmatch   - A Match object from the successful Regex match. "
                        }
                    },
                    "20": {
                        "8": {
                            "name": "send",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "strings"
                            ],
                            "range": [
                                [
                                    20,
                                    8
                                ],
                                [
                                    29,
                                    1
                                ]
                            ],
                            "doc": " Public: Posts a message back to the chat source\n\nstrings - One or more strings to be posted. The order of these strings\n          should be kept intact.\n\nReturns nothing. "
                        }
                    },
                    "29": {
                        "9": {
                            "name": "emote",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "strings"
                            ],
                            "range": [
                                [
                                    29,
                                    9
                                ],
                                [
                                    38,
                                    1
                                ]
                            ],
                            "doc": " Public: Posts an emote back to the chat source\n\nstrings - One or more strings to be posted. The order of these strings\n          should be kept intact.\n\nReturns nothing. "
                        }
                    },
                    "38": {
                        "9": {
                            "name": "reply",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "strings"
                            ],
                            "range": [
                                [
                                    38,
                                    9
                                ],
                                [
                                    47,
                                    1
                                ]
                            ],
                            "doc": " Public: Posts a message mentioning the current user.\n\nstrings - One or more strings to be posted. The order of these strings\n          should be kept intact.\n\nReturns nothing. "
                        }
                    },
                    "47": {
                        "9": {
                            "name": "topic",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "strings"
                            ],
                            "range": [
                                [
                                    47,
                                    9
                                ],
                                [
                                    56,
                                    1
                                ]
                            ],
                            "doc": " Public: Posts a topic changing message\n\nstrings - One or more strings to set as the topic of the\n          room the bot is in.\n\nReturns nothing. "
                        }
                    },
                    "56": {
                        "8": {
                            "name": "play",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "strings"
                            ],
                            "range": [
                                [
                                    56,
                                    8
                                ],
                                [
                                    65,
                                    1
                                ]
                            ],
                            "doc": " Public: Play a sound in the chat source\n\nstrings - One or more strings to be posted as sounds to play. The order of\n          these strings should be kept intact.\n\nReturns nothing "
                        }
                    },
                    "65": {
                        "10": {
                            "name": "locked",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "strings"
                            ],
                            "range": [
                                [
                                    65,
                                    10
                                ],
                                [
                                    73,
                                    1
                                ]
                            ],
                            "doc": " Public: Posts a message in an unlogged room\n\nstrings - One or more strings to be posted. The order of these strings\n          should be kept intact.\n\nReturns nothing "
                        }
                    },
                    "73": {
                        "10": {
                            "name": "random",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "items"
                            ],
                            "range": [
                                [
                                    73,
                                    10
                                ],
                                [
                                    79,
                                    1
                                ]
                            ],
                            "doc": " Public: Picks a random item from the given items.\n\nitems - An Array of items.\n\nReturns a random item. "
                        }
                    },
                    "79": {
                        "10": {
                            "name": "finish",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [],
                            "range": [
                                [
                                    79,
                                    10
                                ],
                                [
                                    88,
                                    1
                                ]
                            ],
                            "doc": " Public: Tell the message to stop dispatching to listeners\n\nReturns nothing. "
                        }
                    },
                    "88": {
                        "8": {
                            "name": "http",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "url",
                                "options"
                            ],
                            "range": [
                                [
                                    88,
                                    8
                                ],
                                [
                                    90,
                                    0
                                ]
                            ],
                            "doc": " Public: Creates a scoped http client with chainable methods for\nmodifying the request. This doesn't actually make a request though.\nOnce your request is assembled, you can call `get()`/`post()`/etc to\nsend the request.\n\nReturns a ScopedClient instance. "
                        }
                    }
                },
                "exports": 91
            },
            "robot.coffee": {
                "objects": {
                    "0": {
                        "17": {
                            "name": "Fs",
                            "type": "import",
                            "range": [
                                [
                                    0,
                                    17
                                ],
                                [
                                    0,
                                    28
                                ]
                            ],
                            "bindingType": "variable",
                            "module": "fs",
                            "builtin": true
                        }
                    },
                    "1": {
                        "17": {
                            "name": "Log",
                            "type": "import",
                            "range": [
                                [
                                    1,
                                    17
                                ],
                                [
                                    1,
                                    29
                                ]
                            ],
                            "bindingType": "variable",
                            "module": "log"
                        }
                    },
                    "2": {
                        "17": {
                            "name": "Path",
                            "type": "import",
                            "range": [
                                [
                                    2,
                                    17
                                ],
                                [
                                    2,
                                    30
                                ]
                            ],
                            "bindingType": "variable",
                            "module": "path",
                            "builtin": true
                        }
                    },
                    "3": {
                        "17": {
                            "name": "HttpClient",
                            "type": "import",
                            "range": [
                                [
                                    3,
                                    17
                                ],
                                [
                                    3,
                                    44
                                ]
                            ],
                            "bindingType": "variable",
                            "module": "scoped-http-client"
                        }
                    },
                    "4": {
                        "1": {
                            "type": "import",
                            "range": [
                                [
                                    4,
                                    1
                                ],
                                [
                                    4,
                                    12
                                ]
                            ],
                            "bindingType": "variable",
                            "module": "events",
                            "builtin": true,
                            "name": "EventEmitter",
                            "exportsProperty": "EventEmitter"
                        }
                    },
                    "6": {
                        "7": {
                            "name": "User",
                            "type": "import",
                            "range": [
                                [
                                    6,
                                    7
                                ],
                                [
                                    6,
                                    22
                                ]
                            ],
                            "bindingType": "variable",
                            "path": "./user"
                        }
                    },
                    "7": {
                        "8": {
                            "name": "Brain",
                            "type": "import",
                            "range": [
                                [
                                    7,
                                    8
                                ],
                                [
                                    7,
                                    24
                                ]
                            ],
                            "bindingType": "variable",
                            "path": "./brain"
                        }
                    },
                    "8": {
                        "11": {
                            "name": "Response",
                            "type": "import",
                            "range": [
                                [
                                    8,
                                    11
                                ],
                                [
                                    8,
                                    30
                                ]
                            ],
                            "bindingType": "variable",
                            "path": "./response"
                        }
                    },
                    "9": {
                        "1": {
                            "type": "import",
                            "range": [
                                [
                                    9,
                                    1
                                ],
                                [
                                    9,
                                    8
                                ]
                            ],
                            "bindingType": "variable",
                            "path": "./listener",
                            "name": "Listener",
                            "exportsProperty": "Listener"
                        },
                        "10": {
                            "type": "import",
                            "range": [
                                [
                                    9,
                                    10
                                ],
                                [
                                    9,
                                    21
                                ]
                            ],
                            "bindingType": "variable",
                            "path": "./listener",
                            "name": "TextListener",
                            "exportsProperty": "TextListener"
                        }
                    },
                    "10": {
                        "1": {
                            "type": "import",
                            "range": [
                                [
                                    10,
                                    1
                                ],
                                [
                                    10,
                                    12
                                ]
                            ],
                            "bindingType": "variable",
                            "path": "./message",
                            "name": "EnterMessage",
                            "exportsProperty": "EnterMessage"
                        },
                        "14": {
                            "type": "import",
                            "range": [
                                [
                                    10,
                                    14
                                ],
                                [
                                    10,
                                    25
                                ]
                            ],
                            "bindingType": "variable",
                            "path": "./message",
                            "name": "LeaveMessage",
                            "exportsProperty": "LeaveMessage"
                        },
                        "27": {
                            "type": "import",
                            "range": [
                                [
                                    10,
                                    27
                                ],
                                [
                                    10,
                                    38
                                ]
                            ],
                            "bindingType": "variable",
                            "path": "./message",
                            "name": "TopicMessage",
                            "exportsProperty": "TopicMessage"
                        },
                        "40": {
                            "type": "import",
                            "range": [
                                [
                                    10,
                                    40
                                ],
                                [
                                    10,
                                    54
                                ]
                            ],
                            "bindingType": "variable",
                            "path": "./message",
                            "name": "CatchAllMessage",
                            "exportsProperty": "CatchAllMessage"
                        }
                    },
                    "12": {
                        "25": {
                            "type": "primitive",
                            "range": [
                                [
                                    12,
                                    25
                                ],
                                [
                                    15,
                                    0
                                ]
                            ]
                        }
                    },
                    "17": {
                        "31": {
                            "type": "primitive",
                            "range": [
                                [
                                    17,
                                    31
                                ],
                                [
                                    28,
                                    0
                                ]
                            ]
                        }
                    },
                    "30": {
                        "0": {
                            "type": "class",
                            "name": "Robot",
                            "classProperties": [],
                            "prototypeProperties": [
                                [
                                    40,
                                    15
                                ],
                                [
                                    76,
                                    8
                                ],
                                [
                                    87,
                                    11
                                ],
                                [
                                    119,
                                    9
                                ],
                                [
                                    131,
                                    9
                                ],
                                [
                                    143,
                                    9
                                ],
                                [
                                    156,
                                    9
                                ],
                                [
                                    166,
                                    23
                                ],
                                [
                                    179,
                                    12
                                ],
                                [
                                    192,
                                    11
                                ],
                                [
                                    211,
                                    12
                                ],
                                [
                                    233,
                                    8
                                ],
                                [
                                    246,
                                    20
                                ],
                                [
                                    257,
                                    23
                                ],
                                [
                                    273,
                                    16
                                ],
                                [
                                    310,
                                    19
                                ],
                                [
                                    325,
                                    15
                                ],
                                [
                                    342,
                                    16
                                ],
                                [
                                    350,
                                    13
                                ],
                                [
                                    393,
                                    8
                                ],
                                [
                                    403,
                                    9
                                ],
                                [
                                    412,
                                    15
                                ],
                                [
                                    424,
                                    6
                                ],
                                [
                                    434,
                                    8
                                ],
                                [
                                    440,
                                    7
                                ],
                                [
                                    447,
                                    12
                                ],
                                [
                                    456,
                                    16
                                ],
                                [
                                    492,
                                    8
                                ]
                            ],
                            "range": [
                                [
                                    30,
                                    0
                                ],
                                [
                                    495,
                                    0
                                ]
                            ]
                        }
                    },
                    "40": {
                        "15": {
                            "name": "constructor",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "adapterPath",
                                "adapter",
                                "httpd",
                                "name"
                            ],
                            "range": [
                                [
                                    40,
                                    15
                                ],
                                [
                                    76,
                                    1
                                ]
                            ],
                            "doc": " Private: Robots receive messages from a chat source (Campfire, irc, etc), and\ndispatch them to matching listeners.\n\nadapterPath - A String of the path to local adapters.\nadapter     - A String of the adapter name.\nhttpd       - A Boolean whether to enable the HTTP daemon.\nname        - A String of the robot name, defaults to Hubot.\n\nReturns nothing. "
                        }
                    },
                    "76": {
                        "8": {
                            "name": "hear",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "regex",
                                "callback"
                            ],
                            "range": [
                                [
                                    76,
                                    8
                                ],
                                [
                                    87,
                                    1
                                ]
                            ],
                            "doc": " Public: Adds a Listener that attempts to match incoming messages based on\na Regex.\n\nregex    - A Regex that determines if the callback should be called.\ncallback - A Function that is called with a Response object.\n\nReturns nothing. "
                        }
                    },
                    "87": {
                        "11": {
                            "name": "respond",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "regex",
                                "callback"
                            ],
                            "range": [
                                [
                                    87,
                                    11
                                ],
                                [
                                    119,
                                    1
                                ]
                            ],
                            "doc": " Public: Adds a Listener that attempts to match incoming messages directed\nat the robot based on a Regex. All regexes treat patterns like they begin\nwith a '^'\n\nregex    - A Regex that determines if the callback should be called.\ncallback - A Function that is called with a Response object.\n\nReturns nothing. "
                        }
                    },
                    "119": {
                        "9": {
                            "name": "enter",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "callback"
                            ],
                            "range": [
                                [
                                    119,
                                    9
                                ],
                                [
                                    131,
                                    1
                                ]
                            ],
                            "doc": " Public: Adds a Listener that triggers when anyone enters the room.\n\ncallback - A Function that is called with a Response object.\n\nReturns nothing. "
                        }
                    },
                    "131": {
                        "9": {
                            "name": "leave",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "callback"
                            ],
                            "range": [
                                [
                                    131,
                                    9
                                ],
                                [
                                    143,
                                    1
                                ]
                            ],
                            "doc": " Public: Adds a Listener that triggers when anyone leaves the room.\n\ncallback - A Function that is called with a Response object.\n\nReturns nothing. "
                        }
                    },
                    "143": {
                        "9": {
                            "name": "topic",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "callback"
                            ],
                            "range": [
                                [
                                    143,
                                    9
                                ],
                                [
                                    156,
                                    1
                                ]
                            ],
                            "doc": " Public: Adds a Listener that triggers when anyone changes the topic.\n\ncallback - A Function that is called with a Response object.\n\nReturns nothing. "
                        }
                    },
                    "156": {
                        "9": {
                            "name": "error",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "callback"
                            ],
                            "range": [
                                [
                                    156,
                                    9
                                ],
                                [
                                    166,
                                    1
                                ]
                            ],
                            "doc": " Public: Adds an error handler when an uncaught exception or user emitted\nerror event occurs.\n\ncallback - A Function that is called with the error object.\n\nReturns nothing. "
                        }
                    },
                    "166": {
                        "23": {
                            "name": "invokeErrorHandlers",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "err",
                                "msg"
                            ],
                            "range": [
                                [
                                    166,
                                    23
                                ],
                                [
                                    179,
                                    1
                                ]
                            ],
                            "doc": " Private: Calls and passes any registered error handlers for unhandled exceptions or\nuser emitted error events.\n\nerr - An Error object.\nmsg - An optional Response object that generated the error\n\nReturns nothing. "
                        }
                    },
                    "179": {
                        "12": {
                            "name": "catchAll",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "callback"
                            ],
                            "range": [
                                [
                                    179,
                                    12
                                ],
                                [
                                    192,
                                    1
                                ]
                            ],
                            "doc": " Public: Adds a Listener that triggers when no other text matchers match.\n\ncallback - A Function that is called with a Response object.\n\nReturns nothing. "
                        }
                    },
                    "192": {
                        "11": {
                            "name": "receive",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "message"
                            ],
                            "range": [
                                [
                                    192,
                                    11
                                ],
                                [
                                    211,
                                    1
                                ]
                            ],
                            "doc": " Public: Passes the given message to any interested Listeners.\n\nmessage - A Message instance. Listeners can flag this message as 'done' to\n          prevent further execution.\n\nReturns nothing. "
                        }
                    },
                    "211": {
                        "12": {
                            "name": "loadFile",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "path",
                                "file"
                            ],
                            "range": [
                                [
                                    211,
                                    12
                                ],
                                [
                                    233,
                                    1
                                ]
                            ],
                            "doc": " Public: Loads a file in path.\n\npath - A String path on the filesystem.\nfile - A String filename in path on the filesystem.\n\nReturns nothing. "
                        }
                    },
                    "233": {
                        "8": {
                            "name": "load",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "path"
                            ],
                            "range": [
                                [
                                    233,
                                    8
                                ],
                                [
                                    246,
                                    1
                                ]
                            ],
                            "doc": " Public: Loads every script in the given path.\n\npath - A String path on the filesystem.\n\nReturns nothing. "
                        }
                    },
                    "246": {
                        "20": {
                            "name": "loadHubotScripts",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "path",
                                "scripts"
                            ],
                            "range": [
                                [
                                    246,
                                    20
                                ],
                                [
                                    257,
                                    1
                                ]
                            ],
                            "doc": " Public: Load scripts specfied in the `hubot-scripts.json` file.\n\npath    - A String path to the hubot-scripts files.\nscripts - An Array of scripts to load.\n\nReturns nothing. "
                        }
                    },
                    "257": {
                        "23": {
                            "name": "loadExternalScripts",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "packages"
                            ],
                            "range": [
                                [
                                    257,
                                    23
                                ],
                                [
                                    273,
                                    1
                                ]
                            ],
                            "doc": " Public: Load scripts from packages specfied in the\n`external-scripts.json` file.\n\npackages - An Array of packages containing hubot scripts to load.\n\nReturns nothing. "
                        }
                    },
                    "273": {
                        "16": {
                            "name": "setupExpress",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [],
                            "range": [
                                [
                                    273,
                                    16
                                ],
                                [
                                    310,
                                    1
                                ]
                            ],
                            "doc": " Private: Setup the Express server's defaults.\n\nReturns nothing. "
                        }
                    },
                    "310": {
                        "19": {
                            "name": "setupNullRouter",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [],
                            "range": [
                                [
                                    310,
                                    19
                                ],
                                [
                                    325,
                                    1
                                ]
                            ],
                            "doc": " Private: Setup an empty router object\n\nreturns nothing "
                        }
                    },
                    "325": {
                        "15": {
                            "name": "loadAdapter",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "path",
                                "adapter"
                            ],
                            "range": [
                                [
                                    325,
                                    15
                                ],
                                [
                                    342,
                                    1
                                ]
                            ],
                            "doc": " Private: Load the adapter Hubot is going to use.\n\npath    - A String of the path to adapter if local.\nadapter - A String of the adapter name to use.\n\nReturns nothing. "
                        }
                    },
                    "342": {
                        "16": {
                            "name": "helpCommands",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [],
                            "range": [
                                [
                                    342,
                                    16
                                ],
                                [
                                    350,
                                    1
                                ]
                            ],
                            "doc": " Public: Help Commands for Running Scripts.\n\nReturns an Array of help commands for running scripts. "
                        }
                    },
                    "350": {
                        "13": {
                            "name": "parseHelp",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "path"
                            ],
                            "range": [
                                [
                                    350,
                                    13
                                ],
                                [
                                    393,
                                    1
                                ]
                            ],
                            "doc": " Private: load help info from a loaded script.\n\npath - A String path to the file on disk.\n\nReturns nothing. "
                        }
                    },
                    "393": {
                        "8": {
                            "name": "send",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "user",
                                "strings"
                            ],
                            "range": [
                                [
                                    393,
                                    8
                                ],
                                [
                                    403,
                                    1
                                ]
                            ],
                            "doc": " Public: A helper send function which delegates to the adapter's send\nfunction.\n\nuser    - A User instance.\nstrings - One or more Strings for each message to send.\n\nReturns nothing. "
                        }
                    },
                    "403": {
                        "9": {
                            "name": "reply",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "user",
                                "strings"
                            ],
                            "range": [
                                [
                                    403,
                                    9
                                ],
                                [
                                    412,
                                    1
                                ]
                            ],
                            "doc": " Public: A helper reply function which delegates to the adapter's reply\nfunction.\n\nuser    - A User instance.\nstrings - One or more Strings for each message to send.\n\nReturns nothing. "
                        }
                    },
                    "412": {
                        "15": {
                            "name": "messageRoom",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "room",
                                "strings"
                            ],
                            "range": [
                                [
                                    412,
                                    15
                                ],
                                [
                                    424,
                                    1
                                ]
                            ],
                            "doc": " Public: A helper send function to message a room that the robot is in.\n\nroom    - String designating the room to message.\nstrings - One or more Strings for each message to send.\n\nReturns nothing. "
                        }
                    },
                    "424": {
                        "6": {
                            "name": "on",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "event",
                                "args"
                            ],
                            "range": [
                                [
                                    424,
                                    6
                                ],
                                [
                                    434,
                                    1
                                ]
                            ],
                            "doc": " Public: A wrapper around the EventEmitter API to make usage\nsemanticly better.\n\nevent    - The event name.\nlistener - A Function that is called with the event parameter\n           when event happens.\n\nReturns nothing. "
                        }
                    },
                    "434": {
                        "8": {
                            "name": "emit",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "event",
                                "args"
                            ],
                            "range": [
                                [
                                    434,
                                    8
                                ],
                                [
                                    440,
                                    1
                                ]
                            ],
                            "doc": " Public: A wrapper around the EventEmitter API to make usage\nsemanticly better.\n\nevent   - The event name.\nargs...  - Arguments emitted by the event\n\nReturns nothing. "
                        }
                    },
                    "440": {
                        "7": {
                            "name": "run",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [],
                            "range": [
                                [
                                    440,
                                    7
                                ],
                                [
                                    447,
                                    1
                                ]
                            ],
                            "doc": " Public: Kick off the event loop for the adapter\n\nReturns nothing. "
                        }
                    },
                    "447": {
                        "12": {
                            "name": "shutdown",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [],
                            "range": [
                                [
                                    447,
                                    12
                                ],
                                [
                                    456,
                                    1
                                ]
                            ],
                            "doc": " Public: Gracefully shutdown the robot process\n\nReturns nothing. "
                        }
                    },
                    "456": {
                        "16": {
                            "name": "parseVersion",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [],
                            "range": [
                                [
                                    456,
                                    16
                                ],
                                [
                                    492,
                                    1
                                ]
                            ],
                            "doc": " Public: The version of Hubot from npm\n\nReturns a String of the version number. "
                        }
                    },
                    "492": {
                        "8": {
                            "name": "http",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                "url",
                                "options"
                            ],
                            "range": [
                                [
                                    492,
                                    8
                                ],
                                [
                                    495,
                                    0
                                ]
                            ],
                            "doc": " Public: Creates a scoped http client with chainable methods for\nmodifying the request. This doesn't actually make a request though.\nOnce your request is assembled, you can call `get()`/`post()`/etc to\nsend the request.\n\nurl - String URL to access.\noptions - Optional options to pass on to the client\n\nExamples:\n\n    robot.http(\"http://example.com\")\n      # set a single header\n      .header('Authorization', 'bearer abcdef')\n\n      # set multiple headers\n      .headers(Authorization: 'bearer abcdef', Accept: 'application/json')\n\n      # add URI query parameters\n      .query(a: 1, b: 'foo & bar')\n\n      # make the actual request\n      .get() (err, res, body) ->\n        console.log body\n\n      # or, you can POST data\n      .post(data) (err, res, body) ->\n        console.log body\n\n   # Can also set options\n   robot.http(\"https://example.com\", {rejectUnauthorized: false})\n\nReturns a ScopedClient instance. "
                        }
                    }
                },
                "exports": 496
            },
            "user.coffee": {
                "objects": {
                    "0": {
                        "0": {
                            "type": "class",
                            "name": "User",
                            "classProperties": [],
                            "prototypeProperties": [
                                [
                                    5,
                                    15
                                ]
                            ],
                            "range": [
                                [
                                    0,
                                    0
                                ],
                                [
                                    9,
                                    0
                                ]
                            ]
                        }
                    },
                    "5": {
                        "15": {
                            "name": "constructor",
                            "bindingType": "prototypeProperty",
                            "type": "function",
                            "paramNames": [
                                null,
                                "options"
                            ],
                            "range": [
                                [
                                    5,
                                    15
                                ],
                                [
                                    9,
                                    0
                                ]
                            ],
                            "doc": " Private: Represents a participating user in the chat.\n\nid      - A unique ID for the user.\noptions - An optional Hash of key, value pairs for this user. "
                        }
                    }
                },
                "exports": 10
            }
        }
    }
]